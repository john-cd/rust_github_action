name: 'Rust GitHub Action'
description: 'GitHub Action that builds Rust code and creates a thin Docker image'
inputs:
  app-name:
    description: 'App name (from Cargo.toml)'
    required: true
    default: 'test_app'
  output-file-name:
    description: 'Name of the output file (without extension)'
    required: true
    default: 'app'
outputs:
  output_file_path:
    description: "Output file path"
    value: ${{ steps.save.outputs.output_file_path }}
runs:
  using: "composite"
  steps:
    - name: Check Runner OS
      if: ${{ runner.os != 'Linux' }}
      shell: bash
      run: |
        echo "::error title=â›” error hint::Support Linux Only"
        exit 1
    # - name: List Paths (debug)
    #   run: |
    #     echo "PATH = $PATH"
    #     echo "Workspace = ${{ github.workspace }}"
    #     echo "Action path = ${{ github.action_path }}"
    #   shell: bash
    ## TODO: if cache_from type=gha does not work, use type=local in compose.yaml and trying the following:
    # - name: Create .cache directory
    #   run: mkdir -p ./.cache/
    # - name: Set up cargo cache
    #   uses: actions/cache@v3
    #   continue-on-error: false
    #   with:
    #     path: ./.cache/
    #     key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    #     restore-keys: ${{ runner.os }}-cargo-
    #
    - name: Build the container
      run: |
        docker build --target final --tag final-app \
          --build-arg RUST_VERSION=1.75 --build-arg APP_NAME=${{ inputs.app-name }} \
          --platform linux/amd64 \
          --cache-from "rust:1.75-alpine" \
          --cache-from "alpine:3.19" \
          --cache-from "type=gha" \
          --cache-to "type=gha,mode=max" \
          --file ${{ github.action_path }}/Dockerfile   ${{ github.workspace }}
      shell: bash
    - name: Display built images (debug)
      run: docker image ls
      shell: bash
    - name: Save the container
      id: save
      run: |
        docker save final-app | zip ${{ inputs.output-file-name }}.tar.zip -
        echo "output_file_path=${{ github.workspace }}/${{ inputs.output-file-name }}.tar.zip" >> "$GITHUB_OUTPUT"
      shell: bash
branding:
  icon: 'package'
  color: 'green'
